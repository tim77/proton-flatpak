diff --git a/proton b/proton
index 051622f..931d095 100755
--- a/proton
+++ b/proton
@@ -92,50 +92,20 @@ def set_dir_casefold_bit(dir_path):
 class Proton:
     def __init__(self, base_dir):
         self.base_dir = base_dir + "/"
-        self.dist_dir = self.path("dist/")
-        self.bin_dir = self.path("dist/bin/")
-        self.lib_dir = self.path("dist/lib/")
-        self.lib64_dir = self.path("dist/lib64/")
-        self.fonts_dir = self.path("dist/share/fonts/")
+        self.dist_dir = self.base_dir
+        self.bin_dir = self.path("bin/")
+        self.lib_dir = self.path("lib32/")
+        self.lib64_dir = self.path("lib/")
+        self.fonts_dir = self.path("share/fonts/")
         self.version_file = self.path("version")
-        self.default_pfx_dir = self.path("dist/share/default_pfx/")
+        self.default_pfx_dir = self.path("share/default_pfx/")
         self.user_settings_file = self.path("user_settings.py")
         self.wine_bin = self.bin_dir + "wine"
         self.wineserver_bin = self.bin_dir + "wineserver"
-        self.dist_lock = FileLock(self.path("dist.lock"), timeout=-1)
 
     def path(self, d):
         return self.base_dir + d
 
-    def extract_tarball(self):
-        with self.dist_lock:
-            if not os.path.exists(self.dist_dir) or \
-                    not os.path.exists(self.path("dist/version")) or \
-                    not filecmp.cmp(self.version_file, self.path("dist/version")):
-                if os.path.exists(self.dist_dir):
-                    shutil.rmtree(self.dist_dir)
-                tar = None
-                for sf in ["", ".xz", ".bz2", ".gz"]:
-                    if os.path.exists(self.path("proton_dist.tar" + sf)):
-                        tar = tarfile.open(self.path("proton_dist.tar" + sf), mode="r:*")
-                        break
-                if not tar:
-                    log("No proton_dist tarball??")
-                    sys.exit(1)
-                tar.extractall(path=self.dist_dir)
-                tar.close()
-                try_copy(self.version_file, self.dist_dir)
-
-    def make_default_prefix(self):
-        with self.dist_lock:
-            local_env = dict(g_session.env)
-            if not os.path.isdir(self.default_pfx_dir):
-                #make default prefix
-                local_env["WINEPREFIX"] = self.default_pfx_dir
-                local_env["WINEDEBUG"] = "-all"
-                g_session.run_proc([self.wine_bin, "wineboot"], local_env)
-                g_session.run_proc([self.wineserver_bin, "-w"], local_env)
-
 class CompatData:
     def __init__(self, compatdata):
         self.base_dir = compatdata + "/"
@@ -506,7 +476,10 @@ class Session:
         if "nod3d9" in self.compat_config:
             self.dlloverrides["d3d9"] = ""
 
-        import protonfixes
+        try:
+            import protonfixes
+        except ModuleNotFoundError as e:
+            log(e.msg)
 
         s = ""
         for dll in self.dlloverrides:
@@ -645,16 +618,12 @@ if __name__ == "__main__":
 
     g_proton = Proton(os.path.dirname(sys.argv[0]))
 
-    g_proton.extract_tarball()
-
     g_compatdata = CompatData(os.environ["STEAM_COMPAT_DATA_PATH"])
 
     g_session = Session()
 
     g_session.init_wine()
 
-    g_proton.make_default_prefix()
-
     g_session.init_session()
 
     #determine mode
