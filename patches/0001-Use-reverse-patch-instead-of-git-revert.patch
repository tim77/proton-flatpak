From fab5be46720bd1a25f54a3957b2137178bac4d98 Mon Sep 17 00:00:00 2001
From: gasinvein <gasinvein@gmail.com>
Date: Sun, 22 Mar 2020 17:17:21 +0300
Subject: [PATCH 1/2] Use reverse patch instead of git revert git revert won't
 work on shallow-cloned wine git repo since the reverted object isn't fetched.

---
 game-patches-testing/protonprep.sh            |  2 +-
 ...-reporting-axis-values-for-joysticks.patch | 82 +++++++++++++++++++
 2 files changed, 83 insertions(+), 1 deletion(-)
 create mode 100644 game-patches-testing/wine-patches/winebus.sys-Fix-reporting-axis-values-for-joysticks.patch

diff --git a/game-patches-testing/protonprep.sh b/game-patches-testing/protonprep.sh
index 9f922a4..06a3c73 100755
--- a/game-patches-testing/protonprep.sh
+++ b/game-patches-testing/protonprep.sh
@@ -30,7 +30,7 @@
     git clean -xdf
 
     # revert this fuckery because for some reason it causes controller axis to spin.
-    git revert --no-commit da7d60bf97fb8726828e57f852e8963aacde21e9
+    patch -Np1 -R < ../game-patches-testing/wine-patches/winebus.sys-Fix-reporting-axis-values-for-joysticks.patch
 
     # needed for mfplat alpha patches
     cp ../game-patches-testing/wine-patches/test.mp4 dlls/mfplat/tests/
diff --git a/game-patches-testing/wine-patches/winebus.sys-Fix-reporting-axis-values-for-joysticks.patch b/game-patches-testing/wine-patches/winebus.sys-Fix-reporting-axis-values-for-joysticks.patch
new file mode 100644
index 0000000..8af0669
--- /dev/null
+++ b/game-patches-testing/wine-patches/winebus.sys-Fix-reporting-axis-values-for-joysticks.patch
@@ -0,0 +1,82 @@
+From da7d60bf97fb8726828e57f852e8963aacde21e9 Mon Sep 17 00:00:00 2001
+From: Zebediah Figura <z.figura12@gmail.com>
+Date: Mon, 9 Mar 2020 11:50:59 -0500
+Subject: [PATCH] winebus.sys: Fix reporting axis values for joysticks.
+
+Signed-off-by: Zebediah Figura <zfigura@codeweavers.com>
+Signed-off-by: Alexandre Julliard <julliard@winehq.org>
+---
+ dlls/winebus.sys/bus_sdl.c | 30 ++++++++++--------------------
+ 1 file changed, 10 insertions(+), 20 deletions(-)
+
+diff --git a/dlls/winebus.sys/bus_sdl.c b/dlls/winebus.sys/bus_sdl.c
+index 7a2069fafe9..0560e4bb128 100644
+--- a/dlls/winebus.sys/bus_sdl.c
++++ b/dlls/winebus.sys/bus_sdl.c
+@@ -265,24 +265,14 @@ static void set_button_value(struct platform_private *ext, int index, int value)
+     }
+ }
+ 
+-static void set_axis_value(struct platform_private *ext, int index, short value)
++static void set_axis_value(struct platform_private *ext, int index, short value, BOOL controller)
+ {
+-    int offset;
+-    offset = ext->axis_start + index * sizeof(WORD);
++    WORD *report = (WORD *)(ext->report_buffer + ext->axis_start);
+ 
+-    switch (index)
+-    {
+-    case SDL_CONTROLLER_AXIS_LEFTX:
+-    case SDL_CONTROLLER_AXIS_LEFTY:
+-    case SDL_CONTROLLER_AXIS_RIGHTX:
+-    case SDL_CONTROLLER_AXIS_RIGHTY:
+-        *((WORD*)&ext->report_buffer[offset]) = LE_WORD(value) + 32768;
+-        break;
+-    case SDL_CONTROLLER_AXIS_TRIGGERLEFT:
+-    case SDL_CONTROLLER_AXIS_TRIGGERRIGHT:
+-        *((WORD*)&ext->report_buffer[offset]) = LE_WORD(value);
+-        break;
+-    }
++    if (controller && (index == SDL_CONTROLLER_AXIS_TRIGGERLEFT || index == SDL_CONTROLLER_AXIS_TRIGGERRIGHT))
++        report[index] = LE_WORD(value);
++    else
++        report[index] = LE_WORD(value) + 32768;
+ }
+ 
+ static void set_ball_value(struct platform_private *ext, int index, int value1, int value2)
+@@ -510,7 +500,7 @@ static BOOL build_report_descriptor(struct platform_private *ext)
+ 
+     /* Initialize axis in the report */
+     for (i = 0; i < axis_count; i++)
+-        set_axis_value(ext, i, pSDL_JoystickGetAxis(ext->sdl_joystick, i));
++        set_axis_value(ext, i, pSDL_JoystickGetAxis(ext->sdl_joystick, i), FALSE);
+     for (i = 0; i < hat_count; i++)
+         set_hat_value(ext, i, pSDL_JoystickGetHat(ext->sdl_joystick, i));
+ 
+@@ -608,7 +598,7 @@ static BOOL build_mapped_report_descriptor(struct platform_private *ext)
+ 
+     /* Initialize axis in the report */
+     for (i = SDL_CONTROLLER_AXIS_LEFTX; i < SDL_CONTROLLER_AXIS_MAX; i++)
+-        set_axis_value(ext, i, pSDL_GameControllerGetAxis(ext->sdl_controller, i));
++        set_axis_value(ext, i, pSDL_GameControllerGetAxis(ext->sdl_controller, i), TRUE);
+ 
+     set_hat_value(ext, 0, compose_dpad_value(ext->sdl_controller));
+ 
+@@ -787,7 +777,7 @@ static BOOL set_report_from_event(SDL_Event *event)
+ 
+             if (ie->axis < 6)
+             {
+-                set_axis_value(private, ie->axis, ie->value);
++                set_axis_value(private, ie->axis, ie->value, FALSE);
+                 process_hid_report(device, private->report_buffer, private->buffer_length);
+             }
+             break;
+@@ -873,7 +863,7 @@ static BOOL set_mapped_report_from_event(SDL_Event *event)
+         {
+             SDL_ControllerAxisEvent *ie = &event->caxis;
+ 
+-            set_axis_value(private, ie->axis, ie->value);
++            set_axis_value(private, ie->axis, ie->value, TRUE);
+             process_hid_report(device, private->report_buffer, private->buffer_length);
+             break;
+         }
-- 
2.25.1

